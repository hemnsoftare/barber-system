// app/api/user/route.ts
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export async function GET() {
  try {
    const users = await prisma.user.findMany();
    return Response.json(users);
  } catch (error) {
    return Response.json(
      { error: "Failed to fetch users" + error },
      { status: 500 }
    );
  }
}

export async function POST(req: Request) {
  try {
    const body = await req.json();

    // ✅ Check for duplicate by email instead of id
    const existingUser = await prisma.user.findUnique({
      where: { email: body.email },
    });

    if (existingUser) {
      return Response.json(
        { error: "User already exists with this email" },
        { status: 400 }
      );
    }

    // ✅ Remove id if it's auto-generated by Prisma
    const { id, createdAt, ...cleanBody } = body;
    console.log(id, createdAt);
    const user = await prisma.user.create({
      data: cleanBody,
    });

    return Response.json(user);
  } catch (error) {
    console.log(error);
    return Response.json({ error: "Failed to create user: " }, { status: 500 });
  }
}
